Note :
Sur windows, pour les utilisateurs d'une version de R >= 3.5, il faut utiliser
le fichier Qair_2.14.*.zip ;
pour les utilisateurs d'une version de R < 3.5 (3.4.3 par exemple), il faut
télécharger le fichier winbin-R3.4.4-Qair_2.14.*.zip et le renommmer en
Qair_2.14.*.zip avant de l'installer.


----------  Qair v2.14.0
Ajout des fonctions indicesXR2Rlong, agolGetData et agolListFields

----------  Qair v2.13.0
adaptation de xrGetContinuousData à un défaut de la base XR suite à l'import des données de Polair

----------  Qair v2.10.0
La fonction xrGetManualData retourne désormais un "tableau sans colonne" si aucune valeur
n'est trouvée (remplace le comportement précédent : plantage).

----------  Qair v2.9.1
Contournement d'un pbm avec ODBC sur windows (paramètre du séparateur de décimales "," au lieu de ".").
La correction précédente n'avait été faite que pour GetContinuousData. Désormais aussi pour
GetManualData.

----------  Qair v2.9.0
Contournement d'un pbm avec ODBC sur windows (paramètre du séparateur de décimales "," au lieu de ".").
Ajustement des imports de packages externes pour être conforme aux nouvelles règles.
Export de chek.na.consecutifs.

----------  Qair v2.8.2
la modification précédente introduisait (généralisait ..) un bug si les données
récupérées étaient d'un type différent du QH ou du H.
Le bug est corrigé.

----------  Qair v2.8.1
modification de xrGetContinuousData ... à priori problème avec RODBC/windows 7

----------  Qair v2.8.0
modification de xrConnect, pour la rendre compatible avec RODBC sous 
windows 64 bits

----------  Qair v2.7.3
adapatation de la fonction validation.reglementaire à un évolution de R-3.1

----------  Qair v2.7.2
correction pour version XR antérieur à la 6
(les données étaient en character et non en numeric)

----------  Qair v2.7.0

correction d'un bug dans xrGetManualData

Lorsque plusieurs analyses d'un même composé sont définies sur
un même bulletin, une seule valeur (aléatoirement) était
rappatriée.

----------  Qair v2.6.0
ajout de la fonction xrGetScan

----------  Qair v2.5.4
Les fonctions xrGetContinuousData et xrGetMesures font appel à la fonction
xrGetStations avec les arguements par défaut et éventuellement l'argument
pattern qui peut être modifié (via l'argument initial 'stations').
Désormais, si 'stations' est une list, les éléments nommés de cette liste
permettent de préciser directement les arguements de la fonction xrGetStations.

----------  Qair v2.5.3
integration de correction mineur depuis la version 2.4.7

----------  Qair v2.5.1,v2.5.2
corrections de bugs mineurs

----------  Qair v2.5.0
* Les fonctions xrGetContinuousData, xrGetMesures et xrGetStations font appel aux
fonctions xrGetReseaux et/ou xrGetCampagnes avec les arguments par défaut et
éventuellement l'argument "pattern" qui peut être modifié (via l'arguement 
initial "reseaux" ou "campagnes").
Désormais, si "reseaux" et/ou "camapgnes" est une liste, les éléments nommés
de cette liste permettent de préciser directement les arguments des fonctions
xrGetReseaux/xrGetCampagnes.

----------  Qair v2.4.7
reglage d'un bug sur l'argument what='both' de la fonction xrgetContinuousData

----------  Qair v2.4.6
reglage d'un bug sur la typologie des stations (xrGetStations)

----------  Qair v2.4.5
* correction d'un bug mineur dans la fonction indicesXR2R

----------  Qair v2.4.4
* correction de dysfonctionnements introduits par les modifications précédentes

----------  Qair v2.4.3
* correction d'un bug : pour la récupération des données journalières, la mise
en forme des données pouvaient introduire des NA injustifiés. Problèmes résolus.

----------  Qair v2.4.1
* Une évolution du paquet RODBC (version 1.1 ?) à entrainer l'aparition possible
d'un petit bug : lorsqu'une variable de type string est rapatriée de la base
mais qu'elle ne contient que des valeurs représentant des valeurs numériques
(par exemple : c('03, '14')), la variable est automatiquement convertie en 
numeric (le résultat de la requête donne c(3, 14) au lieu de c('03', '14')).
le Problème est corrigé.

* Pour éviter ce genre de problème, les versions des modules externes dont dépend
Qair sont désormais précisées dans le fichier DESCRIPTION.

----------  Qair v2.4.0
* correction d'un bug concernant les rapatriements de dates : les dates pour 
les prélèvements manuels ainsi que les dates récupérées directement dans XR via
des requetes directes (xrGet*, xrGetQuery ou dbQuery, mais hors
xrGetContinuousData) présentaient, selon le driver utilisé (ROracle ou 
RODBC) des décalages de 1 ou 2 heures (RJDBC renvoyant des chaines de caractères,
ce driver n'est pas concerné par le bug).
* IMPORTANT : les mesures continues ne sont pas concernées par ce bug (la fonction
xrGetContinuousData utilisant un algo spécifique, le type de driver utilisé 
n'avait pas d'impact).

----------  Qair v2.3.0
* la fonction indicesXR2R permet désormais de récupérer également les sous-indices
* 'connection' a été remplacé par 'connexion'. C'est plus français ...

----------  Qair v2.2.7

Ajout d'un argument 'exact' aux fonctions xrGet*.
Cet argument permet de spécifier si les éléments récupérés dans la base
doivent correspondrent exactement à 'pattern' ou non.

----------  Qair v2.2.6

ajout du support de ROracle pour la connexion à XR.
Utiliser options(Xair.drv='oracle') # au lieu de 'jdbc' ou 'odbc'

----------  Qair v2.2.5

partie réglementaire : la précision pour les métaux lourds a été passée à 2
partie XR : un argument 'categories' a été ajouté à la fonction xrGetManualData

----------  Qair v2.2.4

Modifications transparentes pour l'utilisateur qui permettront cependant
d'assurer la compatibilité avec la future version 1.2 de timetools (prévue
pour le mois de décembre)

----------  Qair V2.2-3

les arguments 'facteur' et 'centre' n'étaient pas pris en compte dans la
fonction 'plot.rosevent'. Erreur corrigée


----------  Qair V2.2-2

ajout des arguments tz et cursor pour les fonctions xrGet*Data
ajout de la possibilité de customiser le format d'affichage des seuils
modification des tests pour alléger le paquet

----------  Qair V2.2-1
Interface à XR
* Prise en compte de l'argument campagnes dans la fonction xrGetManualData
* correction de la fonction xrGetStations pour qu'elle fonctionne même si le champ
	'CLASSE_SITE' n'est pas demandé (remarque de S. Rapenne) 
* correction de la fonction xrGetStations pour permettre l'utilisation simultanée
des arguments 'mesures', 'campagnes' et 'reseaux'.
* ajout d'une méthode "dbDisconnect" pour les connexions ROBDC afin de permettre
à la foncrion Xair2R de fonctionner avec le driver RODBC.

Calculs réglementaires
* Modification de 'validation.reglementaire' et 'seuils' pour pouvoir changer les mois de l'AOT40
* correction des valeurs de seuil d'évaluation min et max pour le PM2,5

Validation
* Ajout du repertoire 'tests' et de fichier permettant la validation du paquet
au moment du R CMD check

----------  Qair V2.2-0
Modification des noms des variables dans les objets retournés par xrGetManualData
afin d'éviter le mélange des composés


Sur les fonctions de traçage de roses :
* correction de la non-prise en compte d'arguments purement graphiques
* ajout des arguments theta.rho et cex.rho

----------  Qair V2.1-1 (15-03-2012)
Corrections diverses pour assurer la compatibilité avec XR dont la version est inférieure à 6.
Corrections diverses pour assurer le bon fonctionnement de Qair avec RODBC.

----------  Qair V2.1-0 (14-03-2012)
1)
Gestion des drivers pour la connexion à la base modifiée :
* par défaut jdbc est toujours utilisé sous les systèmes de type 'unix'
* par défaut odbc est toujours utilisé sous windows
* il désormais possible de spécifier explicitement le pilote à utiliser
  (après ya pas de raison d'utiliser plus l'un ou l'autre en fonction du système)

La spécification se fait au moment de la création de la connexion (xrConnect)
avec l'argument drv.type. L'info est alors stockée dans 'options()$Xair.drv'
Pour changer le comportement par défaut de manière pérenne, il est donc possible
de préciser dans le fichier .Rprofile options(Xair.drv="le pilote que je préfère").

Il n'est plus nécessaire de charger la librairie adéquate (RJDBC ou RODBC selon) :
celle-ci est automatiquement chargée au moment de l'appel à 'xrConnect' si elle
ne l'est pas encore.

2)
Correction des fonctions de plans de sondage qui ne prenaient pas en compte 
la suppression de la dépendance vis-à-vis de lubridate

----------  Qair V2.0-1 (10-02-2012)
Correction d'un bug dans format.seuil (du à la suppression de la dépendance vis-à-vis de timetools)


----------  Qair V2

la V2 de Qair est enfin disponible. Version 2 car il y a de nombreux changements qui font que la V2 et la V1 ne sont pas compatibles. En gros, il va falloir ré-écrire tous les programmes dépendant de Qair !!! Bon, nan, en réalité, il suffira d'installer 2 versions du paquet et de migrer doucement (ou pas du tout pour les anciens prog) vers la V2.
Pour ça, voir la deuxième partie du mail.

Pour commencer, les changements majeurs dans Qair :
-----------------------------------------------------------------------
1- les classes Qair sont abandonnées au profit de la classe TimeIntervalDataFrame (paquet timetools) ;
2- le rapatriement des données de XR ne récupère plus les attributs habituels (lambertx,longitude, etc.) ;
3- MAIS les fonctions du type "xrGet..." permettent d'aller récupérer les infos dans la base ;
3bis- il est même possible de créer sa propre requête ('xrGetQuery') ;
4- désormais il est possible de récupérer les données de prélèvements manuels directement dans des TimeIntervalDataFrame (merci timetools :D ) ;
5- la connexion à la base est initialisée avec la fonction 'xrConnect' ;
6- les méthodes d'estimation de moyennes annuelles (avec incertitude) développées dans le cadre du GT échantillonnage sont intégrées dans Qair (fonction 'estimation.sondage') ;
7- les critères réglementaires applicables dans l'air ambiant sont définis dans Qair et accessibles via la fonction 'seuils' ;
8- une série de fonctions ('validation.reglementaire' pour commencer) permet de confronter les seuils et les données extraites d'XR (ou dans un format TimeIntervalDataFrame) ;
8 bis- cette partie étant assez conséquente, allez jeter un coup d'oeil à la doc et viendez poser toutes vos questions ensuite ;
9- les fonction du type 'calcRose' renvoyaient des données au format peu exploitable, elles sont remplacées par des compute.rose* qui retourne quelque chose de beaucoup plus simple ;
10- les "vents calmes" sont désormais pris en compte dans l'affichage des roses de vent (cf la doc puis n'hésitez pas à poser vos questions) ;
11- un truc fun -> il est possible d'ajouter une rose de pollution sur un graphique préexistant à l'aide des arguments 'add' (=TRUE), 'centre' et 'facteur' (et donc accessoirement directement sur une carte...).

Voilà, j'ai sûrement oublié des trucs, mais surtout, regarder la doc (en fichier attaché et à partir de R, ce sont les mêmes) et n'hésitez pas à poser des questions.

Deuxième point, comment faire pour garder l'installation de la V1 pour continuer à utiliser les anciens programmes ?
---------------------------------------------------------------------------------------------------------------------------------------------------------
C'est relativement simple :
- installer normalement la version 2 de Qair (récupérable comme toujours ici https://sourceforge.net/projects/packagerqair/) ;
- récupérer la version 1, (manuellement à partir d'ici : "https://sourceforge.net/projects/packagerqair/files/Qair/built%20under%20R2.14.1/") (le .zip pour windows, le .tar.gz pour linux & co) ;
- créer un répertoire du genre "C:/Program Files/R/library/" (en réalité, peu importe le nom de ce répertoire, il doit juste être différent du chemin dans lequel R installe par défaut les paquets et qui doit ressembler à "C:/Program Files/R/R-2.14.1/library/") ;
- ouvrir un terminal de R ;
- installer manuellement la version 1 avec la commande suivante :
install.package ("C:/......./Qair_1.0-1.zip", repos=NULL, lib="C:/Prgram Files/R/library/")

De cette manière, la V2 sera la version chargée par défaut :
library (Qair) # charge la V2

Pour charger la V1 il suffira de préciser le chemin où elle a été installée :
library (Qair, lib.loc="C:/Program Files/R/library/") # charge la V1

-> en définitive, il suffira donc de modifier la ligne de chargement du paquet Qair dans les anciens programmes pour qu'ils continuent à fonctionner.

Bien entendu, il est possible d'inverser l'installation de manière à avoir la V1 par défaut (mais c'est peut-être pas la meilleure façon pour s'habituer à la V2 :) ).

