
R version 3.4.3 (2017-11-30) -- "Kite-Eating Tree"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library (Qair)
Loading required package: timetools
Loading required package: DBI
> options(Xair.host = '172.16.16.16',
+ 	Xair.dsn = 'N09',
+ 	Xair.uid = 'vlad',
+ 	Xair.pwd = 'vlad',
+ 	Xair.drv='oracle')
> 
> # test des calculs de valeurs réglementaires
> #===========================================
> # les calculs tests sont basés sur le réseau de mesure
> # de la qualité de l'air de La Rochelle au cours de l'année 2011
> # (à l'exception du CO qui n'est plus mesuré depuis longtemps)
> 
> stations<- c('VERDUN', 'AYTRE', 'VAUGOI', 'STLOUIS_LR')
> sites	<- 'PLAROC_023'
> debut	<- '2011-01-01'
> fin	<- '2012-01-01'
> xr	<- xrConnect()
> 
> # Les polluants 'continus' (or CO)
> #=================================
> 
> polluants <- c('03', '12', '24', '39', '08', '01')
> for (polluant in polluants)
+ {
+ 	donnees <- xrGetContinuousData (xr, stations=stations, start=debut, end=fin,
+ 					polluants=polluant)
+ 	tmp <- validation.reglementaire (donnees, seuils(polluant=polluant),
+ 					 resultat='comparaison')
+ 	tmp <- lapply (tmp, function(x)
+ 		       if (nrow(x) > 1) lapply (x, sum, na.rm=TRUE) else x)
+ 
+ 	# affichage
+ 	print (xrGetPolluants(xr, search.fields='NOPOL', polluant)$NCON)
+ 	print (tmp)
+ }
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
[1] "Dioxyde d'azote"
[[1]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      0      0     NA

[[2]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0

[[3]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0

[[4]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0

[[5]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA  FALSE  FALSE  FALSE     NA

[[6]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA  FALSE  FALSE  FALSE     NA

[[7]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA  FALSE   TRUE  FALSE     NA

[[8]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA  FALSE  FALSE  FALSE     NA

[[9]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      0      0     NA

[[10]]
           start            end N2_VA2 N2_AYT N2_VER N2_VAU N2_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      0      0     NA

Simplified splitting algorithm
[1] "Oxydes d azote"
[[1]]
           start            end NX_VA2 NX_AYT NX_VER NX_VAU NX_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      1      0     NA

[[2]]
           start            end NX_VA2 NX_AYT NX_VER NX_VAU NX_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      1      0     NA

[[3]]
           start            end NX_VA2 NX_AYT NX_VER NX_VAU NX_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA      0      1      0     NA

Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
[1] "PM10"
[[1]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC       0       0     NA     NA         NA
  X24FVAU X24FVER
1       0       0

[[2]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC      10      10      0      0          0
  X24FVAU X24FVER
1      10      10

[[3]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC       1       1      0      0          0
  X24FVAU X24FVER
1       1       1

[[4]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC   FALSE   FALSE     NA     NA         NA
  X24FVAU X24FVER
1   FALSE   FALSE

[[5]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC       0       0     NA     NA         NA
  X24FVAU X24FVER
1       0       0

[[6]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC    TRUE    TRUE     NA     NA         NA
  X24FVAU X24FVER
1    TRUE    TRUE

[[7]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC       1       1     NA     NA         NA
  X24FVAU X24FVER
1       1       1

[[8]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC   FALSE   FALSE     NA     NA         NA
  X24FVAU X24FVER
1   FALSE   FALSE

[[9]]
           start            end X24_VER X24_VAU PS_VER PS_VAU PM10_AYTRE
1 2011-01-01 UTC 2012-01-01 UTC       0       0     NA     NA         NA
  X24FVAU X24FVER
1       0       0

Simplified splitting algorithm
[1] "PM2.5"
[[1]]
           start            end P2_VAU X39_VER
1 2011-01-01 UTC 2012-01-01 UTC     NA       1

[[2]]
           start            end P2_VAU X39_VER
1 2011-01-01 UTC 2012-01-01 UTC     NA       0

[[3]]
           start            end P2_VAU X39_VER
1 2011-01-01 UTC 2012-01-01 UTC     NA   FALSE

[[4]]
           start            end P2_VAU X39_VER
1 2011-01-01 UTC 2012-01-01 UTC     NA       0

[[5]]
           start            end P2_VAU X39_VER
1 2011-01-01 UTC 2012-01-01 UTC     NA       0

Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
[1] "Ozone"
[[1]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   TRUE   TRUE   TRUE     NA
  O3_VE2
1     NA

[[2]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA     NA      1      1     NA
  O3_VE2
1     NA

[[3]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2009-01-01 UTC 2012-01-01 UTC     NA     NA     NA      0      0     NA
  O3_VE2
1     NA

[[4]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2007-01-01 UTC 2012-01-01 UTC     NA     NA     NA     NA     NA     NA
  O3_VE2
1     NA

[[5]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0      0
  O3_VE2
1      0

[[6]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0      0
  O3_VE2
1      0

[[7]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0      0
  O3_VE2
1      0

[[8]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0      0
  O3_VE2
1      0

[[9]]
           start            end O3_VA2 O3_AY1 O3_AYT O3_VER O3_VAU O3_AY2
1 2011-01-01 UTC 2012-01-01 UTC      0      0      0      0      0      0
  O3_VE2
1      0

Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
[1] "Dioxyde de soufre"
[[1]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[2]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC      0      0    0           0

[[3]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC      0      0    0           0

[[4]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[5]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[6]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[7]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2010-10-01 UTC 2012-04-01 UTC      0      0    0           0

[[8]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[9]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[10]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

[[11]]
           start            end S2_VER S2_VAU test SO2_VAUGOIN
1 2011-01-01 UTC 2012-01-01 UTC     NA     NA   NA          NA

> 
> # le monoxyde de carbone CO
> #==========================
> 
> polluant <- '04'
> donnees <- xrGetContinuousData (xr, stations=stations, start='2004-01-01',
+ 				end='2005-01-01', polluants=polluant)
> tmp <- validation.reglementaire (donnees, seuils(polluant=polluant),
+ 				 resultat='comparaison')
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
Simplified splitting algorithm
> tmp <- lapply (tmp, function(x)
+ 	       if (nrow(x) > 1) lapply (x, sum, na.rm=TRUE) else x)
> print (xrGetPolluants(xr, search.fields='NOPOL', polluant)$NCON)
[1] "Monoxyde de carbone"
> print(tmp)
[[1]]
           start            end CO_VER CO_VAUGOUIN CO_VE2 CO_A_VAUGOUIN
1 2004-01-01 UTC 2005-01-01 UTC  FALSE          NA     NA            NA

[[2]]
           start            end CO_VER CO_VAUGOUIN CO_VE2 CO_A_VAUGOUIN
1 2004-01-01 UTC 2005-01-01 UTC  FALSE          NA     NA            NA

[[3]]
           start            end CO_VER CO_VAUGOUIN CO_VE2 CO_A_VAUGOUIN
1 2004-01-01 UTC 2005-01-01 UTC  FALSE          NA     NA            NA

> 
> # les polluants manuels
> #======================
> 
> polluants <- c('19', 'V4', '80', '82', '87', 'P6')
> for (polluant in polluants)
+ {
+ 	donnees <- xrGetManualData (xr, start=debut, end=fin, sites=sites,
+ 					polluants=polluant)
+ 	tmp <- validation.reglementaire (donnees, seuils(polluant=polluant),
+ 					 etapes=c('preparation.comparaison',
+ 						  'comparaison'),
+ 					 resultat='detail',
+ 					 rep.b.comparaison = 0.1)
+ 	# on met 0.1 à la place de 0.14 parce que dans le cas présent
+ 	# on est entre 0.11 et 0.13
+ 
+ 	tmp <- lapply (tmp, function(x)
+ 		       if (nrow(x) > 1) lapply (x, sum, na.rm=TRUE) else x)
+ 
+ 	# affichage
+ 	print (xrGetPolluants(xr, search.fields='NOPOL', polluant)$NCON)
+ 	print (tmp)
+ }
[1] "Plomb"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.19
1                                                                9.82

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.19
1                                                                9.82

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.19
1                                                                9.82

[[4]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.19
1                                                                9.82

[1] "Benzene"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.TUBE.ACTIF.V4
1                                              1.7

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.TUBE.ACTIF.V4
1                                              1.7

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.TUBE.ACTIF.V4
1                                              1.7

[[4]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.TUBE.ACTIF.V4
1                                              1.7

[1] "Arsenic particulaire"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.80
1                                                                0.81

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.80
1                                                                0.81

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.80
1                                                                0.81

[1] "Cadmium particulaire"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.82
1                                                                0.08

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.82
1                                                                0.08

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.82
1                                                                0.08

[1] "Nickel particulaire"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.87
1                                                                1.29

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.87
1                                                                1.29

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.87
1                                                                1.29

[1] "Benzo(a)pyrene particulaire"
[[1]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.P6
1                                                                 0.2

[[2]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.P6
1                                                                 0.2

[[3]]
           start            end
1 2011-01-01 UTC 2012-01-01 UTC
  La.Rochelle...Saint.Louis...Trafic.PRELEVEMENT.1.m3.h.SUR.FILTRE.P6
1                                                                 0.2

> 
> # On ferme
> #=========
> 
> dbDisconnect(xr)
[1] TRUE
> 
> proc.time()
   user  system elapsed 
 19.632   0.136  35.873 
